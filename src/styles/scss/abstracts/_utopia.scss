@use 'sass:map';
@use 'sass:math';
@use './tokens' as *;

/// Utopia configuration variables

/// Minimum width for Utopia fluid type
/// @group utopia
/// @access private
$_utopia-min-width: 480;

/// Maximum width for Utopia fluid type
/// @group utopia
/// @access private
$_utopia-max-width: 1600;

/// Minimum font size for Utopia fluid type
/// @group utopia
/// @access private
$_utopia-min-font-size: 16;

/// Maximum font size for Utopia fluid type
/// @group utopia
/// @access private
$_utopia-max-font-size: 20;

/// Minimum type-scale ratio for Utopia fluid type
///
/// @require $type-scales
/// @group utopia
/// @access private
$_utopia-min-type-scale: map.get($type-scales, 'major-second');

/// Maximum type-scale ratio for Utopia fluid type
///
/// @require $type-scales
/// @group utopia
/// @access private
$_utopia-max-type-scale: map.get($type-scales, 'perfect-fourth');

/// Number of typographic scale steps above the base size generated by Utopia
/// @group utopia
/// @access private
$_utopia-positive-steps: 5;

/// Number of typographic scale steps below the *base size*
/// generated by Utopia
/// *base-size*: from $_utopia-min-font-size to $_utopia-max-font-size
/// @group utopia
/// @access private
$_utopia-negative-steps: 1;

/// Base unit reference for fluid scaling (`viewport` or `container`)
/// @group utopia
/// @access private
$_utopia-relative-to: viewport;

/// Optional prefix for generated custom properties
/// @group utopia
/// @access private
$_utopia-prefix: null !default;

/// Utopia $utopia-config
/// @group utopia
///
/// @link https://utopia.fyi/ Utopia
///
$utopia-config: (
	'minWidth': $_utopia-min-width,
	'maxWidth': $_utopia-max-width,
	'minFontSize': $_utopia-min-font-size,
	'maxFontSize': $_utopia-max-font-size,
	'minTypeScale': $_utopia-min-type-scale,
	'maxTypeScale': $_utopia-max-type-scale,
	'positiveSteps': $_utopia-positive-steps,
	'negativeSteps': $_utopia-negative-steps,
	'relativeTo': $_utopia-relative-to,
	'prefix': $_utopia-prefix,
);

